<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mifan.article.domain.ScheduledJob">

    <!-- result map -->
    <resultMap id="scheduledJob" type="com.mifan.article.domain.ScheduledJob">
        <id property="id" column="id" javaType="long"/>
        <result property="version" column="version" javaType="int"/>
        <result property="jobStatus" column="job_status" javaType="string"/>
        <result property="startTime" column="start_time" javaType="date"/>
        <result property="endTime" column="end_time" javaType="date"/>
        <result property="lastModifiedTime" column="last_modified_time" javaType="date"/>
        <result property="message" column="message" javaType="string"/>
        <result property="description" column="description" javaType="string"/>
        <result property="enabled" column="enabled" javaType="int"/>
    </resultMap>

    <!-- sql -->
    <sql id="columns">
        <choose>
            <when test="fields != null and fields.size != 0">
                <foreach collection="fields" separator="," item="item" index="index">
                    ${item.fullname}
                </foreach>
            </when>
            <otherwise>
                id, version, job_status, start_time, end_time, last_modified_time, message, description, enabled 
            </otherwise>
        </choose>
    </sql>

    <sql id="insertColumns">
        <trim suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="jobStatus != null">
                job_status,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="lastModifiedTime != null">
                last_modified_time,
            </if>
            <if test="message != null">
                message,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
        </trim>
    </sql>

    <sql id="insertEntityColumns">
        <trim suffixOverrides=",">
            <if test="insert.id != null">
                id,
            </if>
            <if test="insert.version != null">
                version,
            </if>
            <if test="insert.jobStatus != null">
                job_status,
            </if>
            <if test="insert.startTime != null">
                start_time,
            </if>
            <if test="insert.endTime != null">
                end_time,
            </if>
            <if test="insert.lastModifiedTime != null">
                last_modified_time,
            </if>
            <if test="insert.message != null">
                message,
            </if>
            <if test="insert.description != null">
                description,
            </if>
            <if test="insert.enabled != null">
                enabled,
            </if>
        </trim>
    </sql>

    <sql id="insertValues">
        <trim suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="version != null">
                #{version},
            </if>
            <if test="jobStatus != null">
                #{jobStatus},
            </if>
            <if test="startTime != null">
                #{startTime},
            </if>
            <if test="endTime != null">
                #{endTime},
            </if>
            <if test="lastModifiedTime != null">
                #{lastModifiedTime},
            </if>
            <if test="message != null">
                #{message},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="enabled != null">
                #{enabled},
            </if>
        </trim>
    </sql>

    <sql id="insertEntityValues">
        <trim suffixOverrides=",">
            <if test="insert.id != null">
                #{insert.id},
            </if>
            <if test="insert.version != null">
                #{insert.version},
            </if>
            <if test="insert.jobStatus != null">
                #{insert.jobStatus},
            </if>
            <if test="insert.startTime != null">
                #{insert.startTime},
            </if>
            <if test="insert.endTime != null">
                #{insert.endTime},
            </if>
            <if test="insert.lastModifiedTime != null">
                #{insert.lastModifiedTime},
            </if>
            <if test="insert.message != null">
                #{insert.message},
            </if>
            <if test="insert.description != null">
                #{insert.description},
            </if>
            <if test="insert.enabled != null">
                #{insert.enabled},
            </if>
        </trim>
    </sql>

    <sql id="updateValues">
        <trim suffixOverrides=",">
            <if test="version != null">
                version = #{version},
            </if>
            <if test="jobStatus != null">
                job_status = #{jobStatus},
            </if>
            <if test="startTime != null">
                start_time = #{startTime},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
            <if test="lastModifiedTime != null">
                last_modified_time = #{lastModifiedTime},
            </if>
            <if test="message != null">
                message = #{message},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
        </trim>
    </sql>

    <sql id="updateValuesByCriterion">
        <trim suffixOverrides=",">
            <if test="entity.version != null">
                version = #{entity.version},
            </if>
            <if test="entity.jobStatus != null">
                job_status = #{entity.jobStatus},
            </if>
            <if test="entity.startTime != null">
                start_time = #{entity.startTime},
            </if>
            <if test="entity.endTime != null">
                end_time = #{entity.endTime},
            </if>
            <if test="entity.lastModifiedTime != null">
                last_modified_time = #{entity.lastModifiedTime},
            </if>
            <if test="entity.message != null">
                message = #{entity.message},
            </if>
            <if test="entity.description != null">
                description = #{entity.description},
            </if>
            <if test="entity.enabled != null">
                enabled = #{entity.enabled},
            </if>
        </trim>
    </sql>

    <sql id="simpleConditions">
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="entity.id != null">
                AND id = #{entity.id}
            </if>
            <if test="entity.version != null">
                AND version = #{entity.version}
            </if>
            <if test="entity.jobStatus != null">
                AND job_status = #{entity.jobStatus}
            </if>
            <if test="entity.startTime != null">
                AND start_time = #{entity.startTime}
            </if>
            <if test="entity.endTime != null">
                AND end_time = #{entity.endTime}
            </if>
            <if test="entity.lastModifiedTime != null">
                AND last_modified_time = #{entity.lastModifiedTime}
            </if>
            <if test="entity.message != null">
                AND message = #{entity.message}
            </if>
            <if test="entity.description != null">
                AND description = #{entity.description}
            </if>
            <if test="entity.enabled != null">
                AND enabled = #{entity.enabled}
            </if>
        </trim>
    </sql>

    <sql id="sort">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <foreach collection="orders" separator="," item="item" index="index">
                ${item.property} ${item.direction}
            </foreach>
        </trim>
    </sql>

    <sql id="criterion">
        <foreach collection="conditions.tokens" item="item">
            <choose>
                <when test="item.param">#{item.value}</when><otherwise>${item.value}</otherwise>
            </choose>
        </foreach>
    </sql>

    <sql id="limit">
        LIMIT #{offset}, #{pageSize}
    </sql>

    <sql id="relationships">
        <if test="relationships != null">
            <foreach collection="relationships" item="join" index="index">
                ${join.type()} ${join.table()} ON ${join.condition()}
            </foreach>
        </if>
    </sql>

    <!-- insert -->
    <insert id="save" parameterType="com.mifan.article.domain.ScheduledJob" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO scheduled_job(<include refid="insertColumns"/>) VALUES (<include refid="insertValues"/>)
    </insert>

    <!-- insert into on duplicate -->
    <insert id="insertOnDuplicate" parameterType="com.mifan.article.domain.ScheduledJob" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO scheduled_job(<include refid="insertEntityColumns"/>) VALUES (<include refid="insertEntityValues"/>) ON DUPLICATE KEY UPDATE <include refid="updateValuesByCriterion"/>
    </insert>

    <!-- insert into on duplicate -->
    <insert id="saveOrUpdate" parameterType="com.mifan.article.domain.ScheduledJob" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO scheduled_job(<include refid="insertColumns"/>) VALUES (<include refid="insertValues"/>) ON DUPLICATE KEY UPDATE <include refid="updateValues"/>
    </insert>

    <!-- delete -->
    <delete id="delete" parameterType="long">
        DELETE FROM scheduled_job WHERE id = #{id}
    </delete>

    <!-- update -->
    <update id="update" parameterType="com.mifan.article.domain.ScheduledJob">
        UPDATE scheduled_job SET <include refid="updateValues"/> WHERE id = #{id}
    </update>

    <update id="updateByCriterion" parameterType="com.mifan.article.domain.ScheduledJob">
        UPDATE scheduled_job SET <include refid="updateValuesByCriterion"/> WHERE id = #{entity.id} AND <include refid="criterion"></include>
    </update>

    <update id="updateByMap" parameterType="map">
        UPDATE scheduled_job
        <trim prefix="SET" suffixOverrides=",">
            <foreach collection="increments" index="index" item="item">
                ${item.key} = ${item.key} + #{item.value},
            </foreach>
            <foreach collection="fields" index="index" item="item">
                ${item.key} = #{item.value},
            </foreach>
        </trim>
        WHERE id = #{id}
    </update>

    <!-- select -->
    <select id="findOne" parameterType="map" resultMap="scheduledJob">
        SELECT
        <include refid="columns"></include>
        FROM scheduled_job WHERE id = #{id}
    </select>

    <select id="findOneByObject" parameterType="map" resultMap="scheduledJob">
        SELECT
        <include refid="columns"></include>
        FROM scheduled_job <include refid="simpleConditions"></include>
    </select>

    <select id="findAll" parameterType="map" resultMap="scheduledJob">
        SELECT
        <include refid="columns"></include>
        FROM scheduled_job WHERE ${field} IN
        <foreach collection="ids" open="(" separator="," close=")" index="index" item="item" >
            ${item}
        </foreach>
    </select>

    <select id="findAllByObject" parameterType="map" resultMap="scheduledJob">
        SELECT
        <include refid="columns"></include>
        FROM scheduled_job <include refid="simpleConditions"></include>
    </select>

    <select id="findAllByCriterion" parameterType="map" resultMap="scheduledJob">
        SELECT
        <include refid="columns"></include>
        FROM scheduled_job WHERE <include refid="criterion"></include>
    </select>

    <select id="findPage" parameterType="map" resultMap="scheduledJob">
        SELECT
        <include refid="columns"></include>
        FROM scheduled_job <include refid="simpleConditions"></include> <include refid="sort"></include> <include refid="limit"></include>
    </select>

    <select id="findPageByCriterion" parameterType="map" resultMap="scheduledJob">
        SELECT
        <include refid="columns"></include>
        FROM scheduled_job
        <include refid="relationships"></include>
        WHERE <include refid="criterion"></include> <include refid="sort"></include> <include refid="limit"></include>
    </select>

    <select id="count" resultType="long">
        SELECT COUNT(*) FROM scheduled_job
    </select>

    <select id="countByCondition" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM scheduled_job <include refid="simpleConditions"></include>
    </select>

    <select id="countByCriterion" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM scheduled_job
        <include refid="relationships"></include>
        WHERE <include refid="criterion"></include>
    </select>

    <select id="exists" parameterType="long" resultType="long">
        SELECT COUNT(*) FROM scheduled_job WHERE id = #{id}
    </select>

</mapper>