<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mifan.reward.domain.Goods">

    <!-- result map -->
    <resultMap id="goods" type="com.mifan.reward.domain.Goods">
        <id property="id" column="id" javaType="long"/>
        <result property="categoryId" column="category_id" javaType="long"/>
        <result property="title" column="title" javaType="string"/>
        <result property="desc" column="desc" javaType="string"/>
        <result property="price" column="price" javaType="int"/>
        <result property="buyUnit" column="buy_unit" javaType="int"/>
        <result property="buyTimes" column="buy_times" javaType="int"/>
        <result property="state" column="state" javaType="int"/>
        <result property="enabled" column="enabled" javaType="int"/>
        <result property="creator" column="creator" javaType="long"/>
        <result property="modifier" column="modifier" javaType="long"/>
        <result property="created" column="created" javaType="date"/>
        <result property="modified" column="modified" javaType="date"/>
    </resultMap>

    <!-- sql -->
    <sql id="columns">
        <choose>
            <when test="fields != null and fields.size != 0">
                <foreach collection="fields" separator="," item="item" index="index">
                    `${item.fullname}`
                </foreach>
            </when>
            <otherwise>
                `id`, `category_id`, `title`, `desc`, `price`, `buy_unit`, `buy_times`, `state`, `enabled`, `creator`, `modifier`, `created`, `modified` 
            </otherwise>
        </choose>
    </sql>

    <sql id="insertColumns">
        <trim suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="categoryId != null">
                `category_id`,
            </if>
            <if test="title != null">
                `title`,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
            <if test="price != null">
                `price`,
            </if>
            <if test="buyUnit != null">
                `buy_unit`,
            </if>
            <if test="buyTimes != null">
                `buy_times`,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="enabled != null">
                `enabled`,
            </if>
            <if test="creator != null">
                `creator`,
            </if>
            <if test="modifier != null">
                `modifier`,
            </if>
            <if test="created != null">
                `created`,
            </if>
            <if test="modified != null">
                `modified`,
            </if>
        </trim>
    </sql>

    <sql id="insertEntityColumns">
        <trim suffixOverrides=",">
            <if test="insert.id != null">
                `id`,
            </if>
            <if test="insert.categoryId != null">
                `category_id`,
            </if>
            <if test="insert.title != null">
                `title`,
            </if>
            <if test="insert.desc != null">
                `desc`,
            </if>
            <if test="insert.price != null">
                `price`,
            </if>
            <if test="insert.buyUnit != null">
                `buy_unit`,
            </if>
            <if test="insert.buyTimes != null">
                `buy_times`,
            </if>
            <if test="insert.state != null">
                `state`,
            </if>
            <if test="insert.enabled != null">
                `enabled`,
            </if>
            <if test="insert.creator != null">
                `creator`,
            </if>
            <if test="insert.modifier != null">
                `modifier`,
            </if>
            <if test="insert.created != null">
                `created`,
            </if>
            <if test="insert.modified != null">
                `modified`,
            </if>
        </trim>
    </sql>

    <sql id="insertValues">
        <trim suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="categoryId != null">
                #{categoryId},
            </if>
            <if test="title != null">
                #{title},
            </if>
            <if test="desc != null">
                #{desc},
            </if>
            <if test="price != null">
                #{price},
            </if>
            <if test="buyUnit != null">
                #{buyUnit},
            </if>
            <if test="buyTimes != null">
                #{buyTimes},
            </if>
            <if test="state != null">
                #{state},
            </if>
            <if test="enabled != null">
                #{enabled},
            </if>
            <if test="creator != null">
                #{creator},
            </if>
            <if test="modifier != null">
                #{modifier},
            </if>
            <if test="created != null">
                #{created},
            </if>
            <if test="modified != null">
                #{modified},
            </if>
        </trim>
    </sql>

    <sql id="insertEntityValues">
        <trim suffixOverrides=",">
            <if test="insert.id != null">
                #{insert.id},
            </if>
            <if test="insert.categoryId != null">
                #{insert.categoryId},
            </if>
            <if test="insert.title != null">
                #{insert.title},
            </if>
            <if test="insert.desc != null">
                #{insert.desc},
            </if>
            <if test="insert.price != null">
                #{insert.price},
            </if>
            <if test="insert.buyUnit != null">
                #{insert.buyUnit},
            </if>
            <if test="insert.buyTimes != null">
                #{insert.buyTimes},
            </if>
            <if test="insert.state != null">
                #{insert.state},
            </if>
            <if test="insert.enabled != null">
                #{insert.enabled},
            </if>
            <if test="insert.creator != null">
                #{insert.creator},
            </if>
            <if test="insert.modifier != null">
                #{insert.modifier},
            </if>
            <if test="insert.created != null">
                #{insert.created},
            </if>
            <if test="insert.modified != null">
                #{insert.modified},
            </if>
        </trim>
    </sql>

    <sql id="updateValues">
        <trim suffixOverrides=",">
            <if test="categoryId != null">
                `category_id` = #{categoryId},
            </if>
            <if test="title != null">
                `title` = #{title},
            </if>
            <if test="desc != null">
                `desc` = #{desc},
            </if>
            <if test="price != null">
                `price` = #{price},
            </if>
            <if test="buyUnit != null">
                `buy_unit` = #{buyUnit},
            </if>
            <if test="buyTimes != null">
                `buy_times` = #{buyTimes},
            </if>
            <if test="state != null">
                `state` = #{state},
            </if>
            <if test="enabled != null">
                `enabled` = #{enabled},
            </if>
            <if test="creator != null">
                `creator` = #{creator},
            </if>
            <if test="modifier != null">
                `modifier` = #{modifier},
            </if>
            <if test="created != null">
                `created` = #{created},
            </if>
            <if test="modified != null">
                `modified` = #{modified},
            </if>
        </trim>
    </sql>

    <sql id="updateValuesByCriterion">
        <trim suffixOverrides=",">
            <if test="entity.categoryId != null">
                `category_id` = #{entity.categoryId},
            </if>
            <if test="entity.title != null">
                `title` = #{entity.title},
            </if>
            <if test="entity.desc != null">
                `desc` = #{entity.desc},
            </if>
            <if test="entity.price != null">
                `price` = #{entity.price},
            </if>
            <if test="entity.buyUnit != null">
                `buy_unit` = #{entity.buyUnit},
            </if>
            <if test="entity.buyTimes != null">
                `buy_times` = #{entity.buyTimes},
            </if>
            <if test="entity.state != null">
                `state` = #{entity.state},
            </if>
            <if test="entity.enabled != null">
                `enabled` = #{entity.enabled},
            </if>
            <if test="entity.creator != null">
                `creator` = #{entity.creator},
            </if>
            <if test="entity.modifier != null">
                `modifier` = #{entity.modifier},
            </if>
            <if test="entity.created != null">
                `created` = #{entity.created},
            </if>
            <if test="entity.modified != null">
                `modified` = #{entity.modified},
            </if>
        </trim>
    </sql>

    <sql id="simpleConditions">
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="entity.id != null">
                AND `id` = #{entity.id}
            </if>
            <if test="entity.categoryId != null">
                AND `category_id` = #{entity.categoryId}
            </if>
            <if test="entity.title != null">
                AND `title` = #{entity.title}
            </if>
            <if test="entity.desc != null">
                AND `desc` = #{entity.desc}
            </if>
            <if test="entity.price != null">
                AND `price` = #{entity.price}
            </if>
            <if test="entity.buyUnit != null">
                AND `buy_unit` = #{entity.buyUnit}
            </if>
            <if test="entity.buyTimes != null">
                AND `buy_times` = #{entity.buyTimes}
            </if>
            <if test="entity.state != null">
                AND `state` = #{entity.state}
            </if>
            <if test="entity.enabled != null">
                AND `enabled` = #{entity.enabled}
            </if>
            <if test="entity.creator != null">
                AND `creator` = #{entity.creator}
            </if>
            <if test="entity.modifier != null">
                AND `modifier` = #{entity.modifier}
            </if>
            <if test="entity.created != null">
                AND `created` = #{entity.created}
            </if>
            <if test="entity.modified != null">
                AND `modified` = #{entity.modified}
            </if>
        </trim>
    </sql>

    <sql id="sort">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <foreach collection="orders" separator="," item="item" index="index">
                ${item.property} ${item.direction}
            </foreach>
        </trim>
    </sql>

    <sql id="criterion">
        <foreach collection="conditions.tokens" item="item">
            <choose>
                <when test="item.param">#{item.value}</when><otherwise>${item.value}</otherwise>
            </choose>
        </foreach>
    </sql>

    <sql id="limit">
        LIMIT #{offset}, #{pageSize}
    </sql>

    <sql id="relationships">
        <if test="relationships != null">
            <foreach collection="relationships" item="join" index="index">
                ${join.type()} ${join.table()} ON ${join.condition()}
            </foreach>
        </if>
    </sql>

    <!-- insert -->
    <insert id="save" parameterType="com.mifan.reward.domain.Goods" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO goods(<include refid="insertColumns"/>) VALUES (<include refid="insertValues"/>)
    </insert>

    <!-- insert into on duplicate -->
    <insert id="insertOnDuplicate" parameterType="com.mifan.reward.domain.Goods" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO goods(<include refid="insertEntityColumns"/>) VALUES (<include refid="insertEntityValues"/>) ON DUPLICATE KEY UPDATE <include refid="updateValuesByCriterion"/>
    </insert>

    <!-- insert into on duplicate -->
    <insert id="saveOrUpdate" parameterType="com.mifan.reward.domain.Goods" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO goods(<include refid="insertColumns"/>) VALUES (<include refid="insertValues"/>) ON DUPLICATE KEY UPDATE <include refid="updateValues"/>
    </insert>

    <!-- delete -->
    <delete id="delete" parameterType="long">
        DELETE FROM goods WHERE id = #{id}
    </delete>

    <!-- update -->
    <update id="update" parameterType="com.mifan.reward.domain.Goods">
        UPDATE goods SET <include refid="updateValues"/> WHERE id = #{id}
    </update>

    <update id="updateByCriterion" parameterType="com.mifan.reward.domain.Goods">
        UPDATE goods SET <include refid="updateValuesByCriterion"/> WHERE id = #{entity.id} AND <include refid="criterion"></include>
    </update>

    <update id="updateByMap" parameterType="map">
        UPDATE goods
        <trim prefix="SET" suffixOverrides=",">
            <foreach collection="increments" index="index" item="item">
                ${item.key} = ${item.key} + #{item.value},
            </foreach>
            <foreach collection="fields" index="index" item="item">
                ${item.key} = #{item.value},
            </foreach>
        </trim>
        WHERE id = #{id}
    </update>

    <!-- select -->
    <select id="findOne" parameterType="map" resultMap="goods">
        SELECT
        <include refid="columns"></include>
        FROM goods WHERE id = #{id}
    </select>

    <select id="findOneByObject" parameterType="map" resultMap="goods">
        SELECT
        <include refid="columns"></include>
        FROM goods <include refid="simpleConditions"></include>
    </select>

    <select id="findOneByCriterion" parameterType="map" resultMap="goods">
        SELECT
        <include refid="columns"></include>
        FROM goods WHERE <include refid="criterion"></include> LIMIT 1
    </select>

    <select id="findAll" parameterType="map" resultMap="goods">
        SELECT
        <include refid="columns"></include>
        FROM goods WHERE ${field} IN
        <foreach collection="ids" open="(" separator="," close=")" index="index" item="item" >
            ${item}
        </foreach>
    </select>

    <select id="findAllByObject" parameterType="map" resultMap="goods">
        SELECT
        <include refid="columns"></include>
        FROM goods <include refid="simpleConditions"></include>
    </select>

    <select id="findAllByCriterion" parameterType="map" resultMap="goods">
        SELECT
        <include refid="columns"></include>
        FROM goods WHERE <include refid="criterion"></include>
    </select>

    <select id="findPage" parameterType="map" resultMap="goods">
        SELECT
        <include refid="columns"></include>
        FROM goods <include refid="simpleConditions"></include> <include refid="sort"></include> <include refid="limit"></include>
    </select>

    <select id="findPageByCriterion" parameterType="map" resultMap="goods">
        SELECT
        <include refid="columns"></include>
        FROM goods
        <include refid="relationships"></include>
        WHERE <include refid="criterion"></include> <include refid="sort"></include> <include refid="limit"></include>
    </select>

    <select id="count" resultType="long">
        SELECT COUNT(*) FROM goods
    </select>

    <select id="countByCondition" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM goods <include refid="simpleConditions"></include>
    </select>

    <select id="countByCriterion" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM goods
        <include refid="relationships"></include>
        WHERE <include refid="criterion"></include>
    </select>

    <select id="exists" parameterType="long" resultType="long">
        SELECT COUNT(*) FROM goods WHERE id = #{id}
    </select>

</mapper>