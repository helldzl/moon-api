###############
#### BANNER ###
###############
#banner.charset=UTF-8 # Banner file encoding.
#banner.location=classpath:banner.txt # Banner file location.
#banner.image.location=classpath:banner.gif # Banner image file location (jpg/png can also be used).
#banner.image.width= # Width of the banner image in chars (default 76)
#banner.image.height= # Height of the banner image in chars (default based on image height)
#banner.image.margin= # Left hand image margin in chars (default 2)
#banner.image.invert= # If images should be inverted for dark terminal themes (default false)

###############
### LOGGING ###
###############
#logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.file=
logging.level.*=INFO
#logging.level.org.springframework=DEBUG
logging.path=/logs/spider
#logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.
#logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.

###########################
### SECURITY PROPERTIES ###
###########################
# SECURITY (SecurityProperties)
#security.basic.authorize-mode=role # Security authorize mode to apply.
security.basic.enabled=false
#security.basic.path=/** # Comma-separated list of paths to secure.
#security.basic.realm=Spring # HTTP basic realm name.
#security.enable-csrf=false # Enable Cross Site Request Forgery support.
#security.filter-order=0 # Security filter chain order.
#security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST # Security filter chain dispatcher types.
#security.headers.cache=true # Enable cache control HTTP headers.
#security.headers.content-security-policy= # Value for content security policy header.
#security.headers.content-security-policy-mode=default # Content security policy mode.
#security.headers.content-type=true # Enable "X-Content-Type-Options" header.
#security.headers.frame=true # Enable "X-Frame-Options" header.
#security.headers.hsts=all # HTTP Strict Transport Security (HSTS) mode (none, domain, all).
#security.headers.xss=true # Enable cross site scripting (XSS) protection.
#security.ignored= # Comma-separated list of paths to exclude from the default secured paths.
#security.require-ssl=false # Enable secure channel for all requests.
#security.sessions=stateless # Session creation policy (always, never, if_required, stateless).
security.user.name=user
security.user.password=user
#security.user.role=USER # Granted roles for the default user name.

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#security.oauth2.client.client-id= # OAuth2 client id.
#security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
#security.oauth2.resource.filter-order= # The order of the filter chain used to authenticate tokens.
#security.oauth2.resource.id= # Identifier of the resource.
#security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.
#security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.
#security.oauth2.resource.service-id=resource #
#security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.
#security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.
#security.oauth2.resource.user-info-uri= # URI of the user endpoint.

# SECURITY OAUTH2 SSO (OAuth2SsoProperties)
#security.oauth2.sso.filter-order= # Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter
#security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server

########################################################
### EMBEDDED SERVER CONFIGURATION (ServerProperties) ###
########################################################
server.port=8080
#server.address=127.0.0.1
server.session.timeout=28800
#server.context-path=/admin

#################################################################
### JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration) ###
#################################################################
#spring.data.jpa.repositories.enabled=true # Enable JPA repositories.
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
spring.jpa.generate-ddl=false
#spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
#spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.
#spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.
#spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
spring.jpa.show-sql=false

#####################
### Redis Service ###
#####################
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.database=0 # Database index used by the connection factory.
#spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
spring.redis.host=192.168.1.138
#spring.redis.password= # Login password of the redis server.
#spring.redis.ssl=false # Enable SSL support.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.port=6379
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.

#################################
### RABBIT (RabbitProperties) ###
#################################
#spider-queue 这个队列只能二选一  用于区分vpn队列还是非vpn队列
#spider-seeds-queue=vpn.data.direct.queue4
spider-seeds-queue=seeds.data.direct.queue4

moon.amqp.rabbit.vpn-seeds-exchange=vpn.direct.exchange4
moon.amqp.rabbit.vpn-seeds-data-queue=vpn.data.direct.queue4
moon.amqp.rabbit.seeds-exchange=seeds.direct.exchange4
moon.amqp.rabbit.seeds-data-queue=seeds.data.direct.queue4


moon.amqp.rabbit.remote-exchange=remote.direct.exchange2
moon.amqp.rabbit.remote-queue=remote.direct.queue2
moon.amqp.rabbit.server-data-queue=server.data.direct.queue2
moon.amqp.rabbit.server-data-exchange=server.data.direct.exchange2
moon.amqp.rabbit.client-data-queue=client.data.direct.queue2
moon.amqp.rabbit.client-data-exchange=client.data.direct.exchange2
moon.amqp.rabbit.server-event-queue=server.event.direct.queue2
moon.amqp.rabbit.server-event-exchange=server.event.direct.exchange2
moon.amqp.rabbit.client-event-exchange=client.event.direct.exchange2
moon.amqp.rabbit.client-event-queue=client.event.direct.queue2

spring.rabbitmq.host=192.168.1.138
spring.rabbitmq.port=5672
spring.rabbitmq.username=rabbitmq
spring.rabbitmq.password=rabbitmq
#spring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.
#spring.rabbitmq.cache.channel.checkout-timeout= # Number of milliseconds to wait to obtain a channel if the cache size has been reached.
#spring.rabbitmq.cache.channel.size= # Number of channels to retain in the cache.
#spring.rabbitmq.cache.connection.mode=channel # Connection factory cache mode.
#spring.rabbitmq.cache.connection.size= # Number of connections to cache.
#spring.rabbitmq.connection-timeout= # Connection timeout, in milliseconds; zero for infinite.
#spring.rabbitmq.dynamic=true # Create an AmqpAdmin bean.
#spring.rabbitmq.listener.acknowledge-mode= # Acknowledge mode of container.
#spring.rabbitmq.listener.auto-startup=true # Start the container automatically on startup.
#spring.rabbitmq.listener.concurrency= # Minimum number of consumers.
#spring.rabbitmq.listener.default-requeue-rejected= # Whether or not to requeue delivery failures; default `true`.
#spring.rabbitmq.listener.idle-event-interval= # How often idle container events should be published in milliseconds.
#spring.rabbitmq.listener.max-concurrency= # Maximum number of consumers.
#spring.rabbitmq.listener.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).
#spring.rabbitmq.listener.retry.enabled=false # Whether or not publishing retries are enabled.
#spring.rabbitmq.listener.retry.initial-interval=1000 # Interval between the first and second attempt to deliver a message.
#spring.rabbitmq.listener.retry.max-attempts=3 # Maximum number of attempts to deliver a message.
#spring.rabbitmq.listener.retry.max-interval=10000 # Maximum interval between attempts.
#spring.rabbitmq.listener.retry.multiplier=1.0 # A multiplier to apply to the previous delivery retry interval.
#spring.rabbitmq.listener.retry.stateless=true # Whether or not retry is stateless or stateful.
#spring.rabbitmq.listener.transaction-size= # Number of messages to be processed in a transaction. For best results it should be less than or equal to the prefetch count.
# Enable publisher confirms.
spring.rabbitmq.publisher-confirms=true
#spring.rabbitmq.publisher-returns=false # Enable publisher returns.
#spring.rabbitmq.requested-heartbeat= # Requested heartbeat timeout, in seconds; zero for none.
#spring.rabbitmq.ssl.enabled=false # Enable SSL support.
#spring.rabbitmq.ssl.key-store= # Path to the key store that holds the SSL certificate.
#spring.rabbitmq.ssl.key-store-password= # Password used to access the key store.
#spring.rabbitmq.ssl.trust-store= # Trust store that holds SSL certificates.
#spring.rabbitmq.ssl.trust-store-password= # Password used to access the trust store.
#spring.rabbitmq.ssl.algorithm= # SSL algorithm to use. By default configure by the rabbit client library.
#spring.rabbitmq.template.mandatory=false # Enable mandatory messages.
# Timeout for `receive()` methods.
spring.rabbitmq.template.receive-timeout=0
# Timeout for `sendAndReceive()` methods.
spring.rabbitmq.template.reply-timeout=50000
# Set to true to enable retries in the `RabbitTemplate`.
spring.rabbitmq.template.retry.enabled=true
# Interval between the first and second attempt to publish a message.
spring.rabbitmq.template.retry.initial-interval=1000
# Maximum number of attempts to publish a message.
spring.rabbitmq.template.retry.max-attempts=3
# Maximum number of attempts to publish a message.
spring.rabbitmq.template.retry.max-interval=10000
# A multiplier to apply to the previous publishing retry interval.
spring.rabbitmq.template.retry.multiplier=10.0
#spring.rabbitmq.virtual-host= # Virtual host to use when connecting to the broker.

#################################
### APPLICATION CONFIGURATION ###
#################################
# SCHEDULER & THREADS & PATH
application.scheduler.enable.fetch=false
application.permits.fetcher=5
application.permits.downloader=10