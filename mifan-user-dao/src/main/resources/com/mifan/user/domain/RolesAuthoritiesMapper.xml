<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mifan.user.domain.RolesAuthorities">

    <!-- result map -->
    <resultMap id="rolesAuthorities" type="com.mifan.user.domain.RolesAuthorities">
        <id property="id" column="id" javaType="long"/>
        <result property="roleId" column="role_id" javaType="long"/>
        <result property="authorityId" column="authority_id" javaType="long"/>
    </resultMap>

    <!-- sql -->
    <sql id="columns">
        <choose>
            <when test="fields != null and fields.size != 0">
                <foreach collection="fields" separator="," item="item" index="index">
                    ${item.fullname}
                </foreach>
            </when>
            <otherwise>
                id, role_id, authority_id
            </otherwise>
        </choose>
    </sql>

    <sql id="insertColumns">
        <trim suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="authorityId != null">
                authority_id,
            </if>
        </trim>
    </sql>

    <sql id="insertValues">
        <trim suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="authorityId != null">
                #{authorityId},
            </if>
        </trim>
    </sql>

    <sql id="updateValues">
        <trim suffixOverrides=",">
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="authorityId != null">
                authority_id = #{authorityId},
            </if>
        </trim>
    </sql>

    <sql id="updateValuesByCriterion">
        <trim suffixOverrides=",">
            <if test="entity.roleId != null">
                role_id = #{entity.roleId},
            </if>
            <if test="entity.authorityId != null">
                authority_id = #{entity.authorityId},
            </if>
        </trim>
    </sql>

    <sql id="simpleConditions">
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="entity.id != null">
                AND id = #{entity.id}
            </if>
            <if test="entity.roleId != null">
                AND role_id = #{entity.roleId}
            </if>
            <if test="entity.authorityId != null">
                AND authority_id = #{entity.authorityId}
            </if>
        </trim>
    </sql>

    <sql id="sort">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <foreach collection="orders" separator="," item="item" index="index">
                ${item.property} ${item.direction}
            </foreach>
        </trim>
    </sql>

    <sql id="criterion">
        <foreach collection="conditions.tokens" item="item">
            <choose>
                <when test="item.param">#{item.value}</when><otherwise>${item.value}</otherwise>
            </choose>
        </foreach>
    </sql>

    <sql id="limit">
        LIMIT #{offset}, #{pageSize}
    </sql>

    <!-- insert -->
    <insert id="save" parameterType="com.mifan.user.domain.RolesAuthorities" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO roles_authorities(<include refid="insertColumns"/>) VALUES (<include refid="insertValues"/>)
    </insert>

    <!-- insert into on duplicate -->
    <insert id="saveOrUpdate" parameterType="com.mifan.user.domain.RolesAuthorities" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO roles_authorities(<include refid="insertColumns"/>) VALUES (<include refid="insertValues"/>) ON DUPLICATE KEY UPDATE <include refid="updateValues"/>
    </insert>

    <!-- delete -->
    <delete id="delete" parameterType="long">
        DELETE FROM roles_authorities WHERE id = #{id}
    </delete>

    <!-- update -->
    <update id="update" parameterType="com.mifan.user.domain.RolesAuthorities">
        UPDATE roles_authorities SET <include refid="updateValues"/> WHERE id = #{id}
    </update>

    <update id="updateByCriterion" parameterType="com.mifan.user.domain.RolesAuthorities">
        UPDATE roles_authorities SET <include refid="updateValuesByCriterion"/> WHERE id = #{entity.id} AND <include refid="criterion"></include>
    </update>

    <!-- select -->
    <select id="findOne" parameterType="map" resultMap="rolesAuthorities">
        SELECT
        <include refid="columns"></include>
        FROM roles_authorities WHERE id = #{id}
    </select>

    <select id="findOneByObject" parameterType="map" resultMap="rolesAuthorities">
        SELECT
        <include refid="columns"></include>
        FROM roles_authorities <include refid="simpleConditions"></include>
    </select>

    <select id="findAll" parameterType="map" resultMap="rolesAuthorities">
        SELECT
        <include refid="columns"></include>
        FROM roles_authorities WHERE ${field} IN
        <foreach collection="ids" open="(" separator="," close=")" index="index" item="item" >
            ${item}
        </foreach>
    </select>

    <select id="findAllByObject" parameterType="map" resultMap="rolesAuthorities">
        SELECT
        <include refid="columns"></include>
        FROM roles_authorities <include refid="simpleConditions"></include>
    </select>

    <select id="findAllByCriterion" parameterType="map" resultMap="rolesAuthorities">
        SELECT
        <include refid="columns"></include>
        FROM roles_authorities WHERE <include refid="criterion"></include>
    </select>

    <select id="findPage" parameterType="map" resultMap="rolesAuthorities">
        SELECT
        <include refid="columns"></include>
        FROM roles_authorities <include refid="simpleConditions"></include> <include refid="sort"></include> <include refid="limit"></include>
    </select>

    <select id="findPageByCriterion" parameterType="map" resultMap="rolesAuthorities">
        SELECT
        <include refid="columns"></include>
        FROM roles_authorities WHERE <include refid="criterion"></include> <include refid="sort"></include> <include refid="limit"></include>
    </select>

    <select id="count" resultType="long">
        SELECT COUNT(*) FROM roles_authorities
    </select>

    <select id="countByCondition" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM roles_authorities <include refid="simpleConditions"></include>
    </select>

    <select id="countByCriterion" parameterType="map" resultType="long">
        SELECT COUNT(*) FROM roles_authorities WHERE <include refid="criterion"></include>
    </select>

    <select id="exists" parameterType="long" resultType="long">
        SELECT COUNT(*) FROM roles_authorities WHERE id = #{id}
    </select>

</mapper>